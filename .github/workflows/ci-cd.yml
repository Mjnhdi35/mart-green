name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: apps/server/package-lock.json

      - name: Install dependencies
        working-directory: apps/server
        run: npm ci

      - name: Run linting
        working-directory: apps/server
        run: npm run lint

      - name: Run tests
        working-directory: apps/server
        run: npm run test

      - name: Build application
        working-directory: apps/server
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        working-directory: apps/server
        run: npm ci

      - name: Run database migrations
        working-directory: apps/server
        run: timeout 300 npm run migration:run
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NODE_ENV: production
        continue-on-error: false

      - name: Build application
        working-directory: apps/server
        run: npm run build

      - name: Deploy to Render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}
